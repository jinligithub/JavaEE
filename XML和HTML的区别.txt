Xml：ssc
    重点解析：xml
          DOM解析：Dom4j：基于面向对象
          SAX解析：基于一种时间的解 

WEB模型
C/S：客户端和服务器端进行交互
特点：1.客户端需要升级才能使用服务器的高版本功能
           举例：教务管理系统/学生管理系统/QQ
           2.维护成本低
           3.访问量不大
B/S：浏览器和服务器之间的交互
HTTP服务器：nginx（并发量5万个） 
WEB服务器：Tomcat：理论上并发量500个

服务器之间的的使用过程：遵循投票容错机制（ping-pang机制：超过半数以上的服务器投票，就可以仍未服务器挂了，退出服务器连接。而每一个主机保证有一个备份机）

 XXX论坛：简单系统

复杂系统：电商网站
   B： Business
   C:    customer
   电商模式：B2C/C2B/P2P/.......B2B2C

SSM：开发某个电商平台
Springboot：微服务也可以去做


XML：可扩展的标记语言
XML出现的原因:
     HTML 是一个结构不严谨的语言，w3cSchool组织用xml语言代替HTML这种语言，但是而是去作为配置文件：三大框架（struts2，hibernate，Spring，springmvc，mybatis）

XML 和HTML的区别：
1.结构的区别：HTML时规带当前网页结构的语言，遵循HTML标签的规范
                        XML：作为软件配置的文件的一种结构，后期框架配置文件都是xml
2.语法区别：HTML语言不够严禁（举例：标签可以不配对出现，及时不配对的 标签也可以没有/结束符号）
                     XML：结构严禁，是必须要符合XML的语法规则

XML 的作用
1.作为软件的配置文件，框架的配置文件等
   xxx.properties       javaSE属性集合
    key=value
举例：描述一个主机  IP地址加端口号
IP：192.168.3.1
port：12354

XML：简单配置文件
<host>  
   <ip>192.168.3.1</ip>
    <port>12354</port>
</host>

2.XML 作为一个小型的数据库‘’
XML：描述联系人的
<contect-list>
   姓名，电话，邮箱
</content-list>

Mysql：建库，建表，字段

XML：语言的语法规则：
标签：1.标签必须成对出现，否则报错   2.可以成对出现，但是命名空间除外   3.可以是下划线开头，但是不能以数字开头   4.标签中不能出现空鼓
属性：属性在XML中可以是单引号或双引号    属性名称=“ 属性值”   一个XML中可以指定多个属性   
注释：桶HTML一样    <!---->
文档声明：
<?xml  version ="1.0"   encoding ="UTF-8"?>
version：
encoding：指定当前


需求：通过上面学习的语法 描述联系人：姓名，性别，邮箱
并且联系人不止一个